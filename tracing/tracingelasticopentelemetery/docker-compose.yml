version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.5
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200" ]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.5
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # GRPC endpoint for receiving spans
      - "14268:14268"  # HTTP endpoint for receiving spans
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URL=http://elasticsearch:9200

    depends_on:
      - elasticsearch
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200" ]  # Ensure Jaeger checks Elasticsearch health
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

    volumes:
      - ./src/main/resources/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    command:
      - "--config=/otel-config.yaml"
    depends_on:
      - elasticsearch
      - jaeger
    restart: on-failure


volumes:
  es_data:
